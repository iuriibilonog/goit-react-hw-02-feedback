{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","App.module.css"],"names":["FeedbackOptions","options","getFeedBackOnClick","className","s","btnWrapper","map","btn","type","onClick","e","target","name","protoTypes","PropTypes","array","isRequired","func","Statistics","total","positiveInPercente","good","neutral","bad","Section","title","children","Notification","message","App","state","props","initialValueGood","initialValueNeutral","initialValueBad","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sUAIMA,EAAkB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,QAAUC,EAAyB,EAAzBA,mBACnC,OACE,qBAAKC,UAAWC,IAAEC,WAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAG,OAAI,wBAAQC,KAAK,SAAmBC,QAAS,SAACC,GAAQR,EAAmBQ,EAAEC,OAAOC,OAASA,KAAML,EAAKJ,UAAWC,IAAEG,IAA/G,SAAqHA,GAA1FA,SAKrDP,EAAgBa,WAAa,CAC3BZ,QAASa,IAAUC,MAAMC,WACzBd,mBAAoBY,IAAUG,KAAKD,YAItBhB,QCAAkB,G,MAhBI,SAAC,GAA4C,IAA1CjB,EAAyC,EAAzCA,QAASkB,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC5BC,EAAuBpB,EAAvBoB,KAAMC,EAAiBrB,EAAjBqB,QAASC,EAAQtB,EAARsB,IAEvB,OACE,sBAAKpB,UAAU,oBAAf,UACE,oBAAGA,UAAU,YAAb,oBAAiCkB,KACjC,oBAAGlB,UAAU,YAAb,uBAAoCmB,KACpC,oBAAGnB,UAAU,YAAb,mBAAgCoB,KAChC,oBAAGpB,UAAU,YAAb,qBAAkCgB,OAClC,oBAAGhB,UAAU,YAAb,iCAA8CiB,IAA9C,YCKSI,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACHC,MCMOC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,4BAAKA,KCGHC,E,4MAOJC,MAAQ,CACNT,KAAM,EAAKU,MAAMC,iBACjBV,QAAS,EAAKS,MAAME,oBACpBV,IAAK,EAAKQ,MAAMG,iB,EAGlBhC,mBAAqB,SAACU,GACpB,EAAKuB,UAAS,SAACC,GACb,OAAO,eACJxB,EAAOwB,EAAUxB,GAAQ,O,EAKhCyB,mBAAqB,WACnB,MAA+B,EAAKP,MAEpC,OAFA,EAAQT,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBe,gCAAkC,WAChC,MAA+B,EAAKR,MAA5BT,EAAR,EAAQA,KACFF,EAAQE,EADd,EAAcC,QAAd,EAAuBC,IAGvB,OADyBJ,EAAQ,EAAIoB,KAAKC,MAAOnB,EAAOF,EAAS,KAAO,G,4CAI1E,WACE,MAA+BsB,KAAKX,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKpB,UAAWC,IAAEyB,IAAlB,UACE,cAAC,EAAD,CAASJ,MAAM,wBAAf,SACE,cAAC,EAAD,CACEvB,mBAAoBuC,KAAKvC,mBACzBD,QAAS,CAAC,OAAQ,UAAW,WAGjC,cAAC,EAAD,CAASwB,MAAM,aAAf,SACiC,IAA9BgB,KAAKJ,qBACJ,cAAC,EAAD,CAAcT,QAAQ,sBAEtB,cAAC,EAAD,CACE3B,QAAS,CAAEoB,OAAMC,UAASC,OAC1BJ,MAAOsB,KAAKJ,mBACZjB,mBAAoBqB,KAAKH,2C,GAnDrBI,aAAZb,EACGc,aAAe,CACpBX,iBAAkB,EAClBC,oBAAqB,EACrBC,gBAAiB,GAwDNL,QC9Dfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,WAAa,oCAAoC,IAAM,+B,kBCAzED,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAW,sBAAsB,gBAAgB,2BAA2B,aAAa,wBAAwB,WAAW,yB","file":"static/js/main.1ac58b1a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\n\r\nconst FeedbackOptions = ({ options , getFeedBackOnClick }) => {\r\n  return (\r\n    <div className={s.btnWrapper}>\r\n      {options.map(btn => <button type='button' key={btn} onClick={(e) => { getFeedBackOnClick(e.target.name) }} name={btn} className={s.btn}>{btn}</button>) }\r\n      \r\n    </div>)\r\n}\r\n\r\nFeedbackOptions.protoTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  getFeedBackOnClick: PropTypes.func.isRequired\r\n\r\n}\r\n \r\nexport default FeedbackOptions;","import './Statistics.css';\r\n\r\nconst Statistics = ({ options, total, positiveInPercente }) => {\r\n  const { good, neutral, bad } = options;\r\n  \r\n  return (\r\n    <div className=\"statisticsWrapper\">\r\n      <p className=\"feedCount\">Good : {good}</p>\r\n      <p className=\"feedCount\">Neutral : {neutral}</p>\r\n      <p className=\"feedCount\">Bad : {bad}</p>\r\n      <p className=\"feedCount\">Total : {total()}</p>\r\n      <p className=\"feedCount\">Positive feedback : {positiveInPercente()}%</p>\r\n    </div>\r\n  )\r\n  \r\n}\r\n \r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      { children}\r\n     </section> \r\n      \r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <p>{ message }</p>\r\n  )\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\nimport s from \"./App.module.css\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Section from \"./components/Section/\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  static defaultProps = {\n    initialValueGood: 0,\n    initialValueNeutral: 0,\n    initialValueBad: 0,\n  };\n\n  state = {\n    good: this.props.initialValueGood,\n    neutral: this.props.initialValueNeutral,\n    bad: this.props.initialValueBad,\n  };\n\n  getFeedBackOnClick = (name) => {\n    this.setState((prevState) => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    const PositivePercente = total > 0 ? Math.round((good / total) * 100) : 0;\n    return PositivePercente;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className={s.App}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            getFeedBackOnClick={this.getFeedBackOnClick}\n            options={[\"good\", \"neutral\", \"bad\"]}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              options={{ good, neutral, bad }}\n              total={this.countTotalFeedback}\n              positiveInPercente={this.countPositiveFeedbackPercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"FeedbackOptions_btnWrapper__17W0t\",\"btn\":\"FeedbackOptions_btn__1JmVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3ewv2\",\"App-logo\":\"App_App-logo__1mG4j\",\"App-logo-spin\":\"App_App-logo-spin__3wST6\",\"App-header\":\"App_App-header__2e174\",\"App-link\":\"App_App-link__2o5YZ\"};"],"sourceRoot":""}